
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.example.invoiceservice;

import java.util.logging.Logger;

import javax.naming.ConfigurationException;

import org.example.businessschemas.InvoiceFaultType;
import org.example.messages.AddInvoiceFaultType;

import si.fri.aws.dynamodb.DynamoDBHelper;

import com.amazonaws.services.dynamodb.AmazonDynamoDB;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBMapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-12-03T08:51:16.902+01:00
 * Generated source version: 2.7.0
 * 
 */

@javax.jws.WebService(
                      serviceName = "InvoiceService",
                      portName = "InvoiceServiceSOAP",
                      targetNamespace = "http://www.example.org/InvoiceService/",
                      wsdlLocation = "http://www.example.org/?wsdl",
                      endpointInterface = "org.example.invoiceservice.InvoiceService")

public class InvoiceServiceImpl implements InvoiceService {

    private static final Logger LOG = Logger.getLogger(InvoiceServiceImpl.class.getName());
	private static final String ENDPOINT_URL="https://dynamodb.eu-west-1.amazonaws.com";
	private static final Boolean ENABLE_ERROR_RETRY=true;

    /* (non-Javadoc)
     * @see org.example.invoiceservice.InvoiceService#addInvoice(org.example.messages.AddInvoiceRequestType  addInvoiceInput )*
     */
    public org.example.messages.AddInvoiceResponseType addInvoice(org.example.messages.AddInvoiceRequestType addInvoiceInput) throws AddInvoiceFault    { 
        LOG.info("Executing operation addInvoice");
        System.out.println(addInvoiceInput);
        try {
            org.example.messages.AddInvoiceResponseType result = new org.example.messages.AddInvoiceResponseType();
            
            AmazonDynamoDB dynamo=DynamoDBHelper.createClient(ENABLE_ERROR_RETRY, ENDPOINT_URL);
            DynamoDBMapper mapper = new DynamoDBMapper(dynamo);
            si.fri.aws.dynamodb.InvoiceEntityType dynamoEntity=convertToDynamoEntity(addInvoiceInput.getInvoice());
            
            mapper.save(dynamoEntity);
            
			if (addInvoiceInput.getInvoice().getBarcode().contains("error")) {
				org.example.messages.AddInvoiceFaultType fault = new AddInvoiceFaultType();
				InvoiceFaultType error = new InvoiceFaultType();
				error.setCode("RSO-0001");
				error.setDescription("Invalid data");
				fault.setFault(error);
				throw new AddInvoiceFault("error", fault);
			}
			
			if (addInvoiceInput.getInvoice().getBarcode().contains("no")) {
				result.setStatus("1");
			} else {
				result.setStatus("2");
			}
			return result;
            
        } catch(ConfigurationException ce){
        	throw new AddInvoiceFault("Credentials configuration error");
		} catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
    
    //function to convert ws shema entity into dynamo persistent Entity
    private si.fri.aws.dynamodb.InvoiceEntityType convertToDynamoEntity(org.example.businessschemas.InvoiceEntityType wsEntity){
        si.fri.aws.dynamodb.InvoiceEntityType dynamoEntity=new si.fri.aws.dynamodb.InvoiceEntityType();
    
        dynamoEntity.setBarcode(wsEntity.getBarcode());
        dynamoEntity.setPrice(wsEntity.getPrice());

        return dynamoEntity;
    }

}
